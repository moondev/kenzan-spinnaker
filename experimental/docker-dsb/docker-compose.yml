version: '2'

networks:
  internal:
    driver: bridge

services:
  pingbox:
    image: nginx
    networks:
     internal:
       aliases:
        - pingbox-alias
  configdata:
    image: debian:jessie
    volumes:
     - ./config:/opt/spinnaker/config
  redis:
    image: redis
    networks:
     internal:
       aliases:
        - redis-alias
  cassandra:
    image: cassandra:2.2.5
    networks:
     internal:
       aliases:
        - cassandra-alias
    environment:
      CASSANDRA_START_RPC: "true"
  # wait:
  #   image: chadmoon/dockerize
  #   command: dockerize -wait tcp://cassandra-alias:9042 -timeout 30s echo "cassandra ready!"
  #   networks:
  #    internal:
  #      aliases:
  #       - cassandra-alias
  #   depends_on:
  #    - cassandra
  # cassandra-setup:
  #   image: cassandra:2.2.5
  #   depends_on:
  #    - cassandra
  #   volumes:
  #    - ../../cassandra/create_front50_keyspace.cql:/front50.cql
  #    - ../../cassandra/create_echo_keyspace.cql:/echo.cql
  #   command: sleep 15; nodetool cassandra-alias enablethrift; cqlsh cassandra-alias -f /front50.cql;cqlsh cassandra-alias -f /echo.cql
  front50:
    image: quay.io/spinnaker/front50
    networks:
     internal:
       aliases:
        - front50-alias
    volumes_from:
      - configdata
    env_file: .env
  clouddriver:
    image: quay.io/spinnaker/clouddriver
    networks:
     internal:
       aliases:
        - clouddriver-alias
    volumes_from:
     - configdata
    env_file: .env
    depends_on:
     - front50
     - redis
  rosco:
    image: quay.io/spinnaker/rosco
    networks:
     internal:
       aliases:
        - rosco-alias
    depends_on:
     - clouddriver
    volumes_from:
     - configdata
  orca:
    image: quay.io/spinnaker/orca
    networks:
     internal:
       aliases:
        - orca-alias
    depends_on:
     - rosco
    volumes_from:
     - configdata
  gate:
    image: quay.io/spinnaker/gate
    networks:
     internal:
       aliases:
        - gate-alias
    depends_on:
     - orca
    volumes_from:
     - configdata
  deck:
    image: nginx
    networks:
      - internal
      - default
    depends_on:
     - gate
    volumes:
     - ./deck:/opt/deck
     - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
     - "9000:80"
